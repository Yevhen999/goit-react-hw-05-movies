{"version":3,"file":"static/js/816.a8f23876.chunk.js","mappings":"4OACA,EAAuB,6BAAvB,EAAyE,2CAAzE,EAA+H,iCAA/H,EAAiL,uC,SCqCjL,EAnCuB,WAAO,IAAD,IAErBA,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,iBAAKC,UAAWC,EAAhB,WACE,6CACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CACED,UAAW,qBAAGE,SACDD,EAAqBA,CADvB,EAGXE,GAAG,OACHL,MAAO,CAAEC,KAAMH,GALjB,qBAUF,yBACE,SAAC,KAAD,CACEI,UAAW,qBAAGE,SACDD,EAAqBA,CADvB,EAGXE,GAAG,UACHL,MAAO,CAAEC,KAAMH,GALjB,4BAaT,ECnCD,EAAuB,wBC+BvB,EA5BkB,SAAC,GAAe,IAAD,IAAZQ,EAAY,EAAZA,MAEbR,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACrCM,EACND,EADMC,MAAOC,EACbF,EADaE,OAAQC,EACrBH,EADqBG,aAAcC,EACnCJ,EADmCI,SAAUC,EAC7CL,EAD6CK,aAAcC,EAC3DN,EAD2DM,YAGvDC,GADaF,EAAe,GAAM,KACLG,QAAQ,GACrCC,EAAM,0CAAsCH,GAElD,OACE,6BACE,SAAC,KAAD,CAAMP,GAAIP,EAAV,sBACA,iBAAKI,UAAWC,EAAUa,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAAzD,WACE,gBAAKC,IAAKJ,EAAQK,IAAI,eACtB,iBAAKJ,MAAO,CAAEK,MAAO,SAArB,WACE,wBAAKd,KACL,sCAAcE,MACd,wCAAgBI,EAAhB,QACA,sCACA,uBAAIH,KACJ,mCACA,uBAAIF,GAAUA,EAAO,GAAGc,eAKjC,E,2BCqBD,EA5CqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAcoB,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBJ,GAAa,GAFI,UAGIK,EAAAA,EAAAA,IAAaV,GAHjB,OAGXW,EAHW,OAIjBR,EAASQ,GACTN,GAAa,GALI,gDAOjBE,EAAS,mBAPQ,yDAAH,qDAUlBE,GACD,GAAE,CAACT,KAGF,gCACGI,IACC,SAAC,KAAD,CACEQ,OAAQ,GACRd,MAAO,GACPe,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAGxBhB,GAAarB,IAAUuB,IAAS,SAAC,EAAD,CAAWvB,MAAOA,KAClDqB,GAAarB,IAAS,SAAC,EAAD,IACvBuB,IAAS,wBAAKA,KACf,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/AdditionalInfo/AdditionalInfo.module.css?0bf0","components/AdditionalInfo/AdditionalInfo.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"AdditionalInfo_wrap__Eh559\",\"listAdditionalInfo\":\"AdditionalInfo_listAdditionalInfo__bCMuN\",\"listLink\":\"AdditionalInfo_listLink__O3Toj\",\"activeListLink\":\"AdditionalInfo_activeListLink__-Znrw\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport css from './AdditionalInfo.module.css';\n\nconst AdditionalInfo = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <div className={css.wrap}>\n      <h2>Additional info</h2>\n      <ul className={css.listAdditionalInfo}>\n        <li>\n          <NavLink\n            className={({ isActive }) =>\n              isActive ? css.activeListLink : css.listLink\n            }\n            to=\"cast\"\n            state={{ from: backLinkHref }}\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className={({ isActive }) =>\n              isActive ? css.activeListLink : css.listLink\n            }\n            to=\"reviews\"\n            state={{ from: backLinkHref }}\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MovieCard_wrap__iwlfD\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieCard.module.css';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const { title, genres, release_date, overview, vote_average, poster_path } =\n    movie;\n  const userScore = (vote_average / 10) * 100;\n  const userAverageScore = userScore.toFixed(0);\n  const imgUrl = `https://image.tmdb.org/t/p/w300/${poster_path}`;\n\n  return (\n    <main>\n      <Link to={backLinkHref}>Go back</Link>\n      <div className={css.wrap} style={{ display: 'flex', gap: '15px' }}>\n        <img src={imgUrl} alt=\"film-card\" />\n        <div style={{ width: '550px' }}>\n          <h1>{title}</h1>\n          <h3>Release: {release_date}</h3>\n          <p>User score: {userAverageScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genre</h2>\n          <p>{genres && genres[0].name}</p>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    poster_path: PropTypes.string,\n  }),\n};\n","import AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\nimport { Oval } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const movieRequest = async () => {\n      try {\n        setIsLoading(true);\n        const result = await getMovieById(movieId);\n        setMovie(result);\n        setIsLoading(false);\n      } catch {\n        setError('Failed to fetch');\n      }\n    };\n    movieRequest();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <Oval\n          height={80}\n          width={80}\n          color=\"#4fa94d\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"oval-loading\"\n          secondaryColor=\"#4fa94d\"\n          strokeWidth={2}\n          strokeWidthSecondary={2}\n        />\n      )}\n      {!isLoading && movie && !error && <MovieCard movie={movie} />}\n      {!isLoading && movie && <AdditionalInfo />}\n      {error && <h2>{error}</h2>}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["backLinkHref","useLocation","state","from","className","css","isActive","to","movie","title","genres","release_date","overview","vote_average","poster_path","userAverageScore","toFixed","imgUrl","style","display","gap","src","alt","width","name","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","movieRequest","getMovieById","result","height","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary"],"sourceRoot":""}