{"version":3,"file":"static/js/131.a878c4b5.chunk.js","mappings":"4OAwBA,EAtBuB,WACrB,OACE,iBACEA,MAAO,CACLC,OAAQ,mBACRC,UAAW,OACXC,QAAS,QAJb,WAOE,6CACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,4BAKT,E,SCQD,EA5BkB,SAAC,GAAe,IAAD,IAAZC,EAAY,EAAZA,MAEbC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACrCC,EACNL,EADMK,MAAOC,EACbN,EADaM,OAAQC,EACrBP,EADqBO,aAAcC,EACnCR,EADmCQ,SAAUC,EAC7CT,EAD6CS,aAAcC,EAC3DV,EAD2DU,YAGvDC,GADaF,EAAe,GAAM,KACLG,QAAQ,GACrCC,EAAM,0CAAsCH,GAElD,OACE,6BACE,SAAC,KAAD,CAAMX,GAAIE,EAAV,sBACA,iBAAKN,MAAO,CAAEmB,QAAS,OAAQC,IAAK,QAApC,WACE,gBAAKC,IAAKH,EAAQI,IAAI,eACtB,iBAAKtB,MAAO,CAAEuB,MAAO,SAArB,WACE,wBAAKb,KACL,sCAAcE,MACd,wCAAgBI,EAAhB,QACA,sCACA,uBAAIH,KACJ,mCACA,uBAAIF,GAAUA,EAAO,GAAGa,eAKjC,E,kBCOD,EA7BqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOtB,EAAP,KAAcuB,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAIA,IAAMK,EAAY,mCAAG,qGACEC,EAAAA,EAAAA,IAAaN,GADf,cACbO,EADa,OAKnBJ,EAASI,GALU,8DAAH,qDAQlBF,GAVC,CAWF,GAAE,CAACL,KAGF,iCACE,SAAC,EAAD,CAAWpB,MAAOA,KAClB,SAAC,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["components/AdditionalInfo/AdditionalInfo.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst AdditionalInfo = () => {\n  return (\n    <div\n      style={{\n        border: '1px tomato solid',\n        marginTop: '10px',\n        padding: '15px',\n      }}\n    >\n      <h2>Additional info</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const { title, genres, release_date, overview, vote_average, poster_path } =\n    movie;\n  const userScore = (vote_average / 10) * 100;\n  const userAverageScore = userScore.toFixed(0);\n  const imgUrl = `https://image.tmdb.org/t/p/w300/${poster_path}`;\n\n  return (\n    <main>\n      <Link to={backLinkHref}>Go back</Link>\n      <div style={{ display: 'flex', gap: '15px' }}>\n        <img src={imgUrl} alt=\"film-card\" />\n        <div style={{ width: '550px' }}>\n          <h1>{title}</h1>\n          <h3>Release: {release_date}</h3>\n          <p>User score: {userAverageScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genre</h2>\n          <p>{genres && genres[0].name}</p>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default MovieCard;\n","import AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const movieRequest = async () => {\n      const result = await getMovieById(movieId);\n\n      // MAP //\n\n      setMovie(result);\n      return;\n    };\n    movieRequest();\n  }, [movieId]);\n\n  return (\n    <>\n      <MovieCard movie={movie} />\n      <AdditionalInfo />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["style","border","marginTop","padding","to","movie","backLinkHref","useLocation","state","from","title","genres","release_date","overview","vote_average","poster_path","userAverageScore","toFixed","imgUrl","display","gap","src","alt","width","name","movieId","useParams","useState","setMovie","useEffect","movieRequest","getMovieById","result"],"sourceRoot":""}